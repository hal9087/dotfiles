#!/usr/bin/env bash
echo 'Treeweb Install Dotfiles Script - inspired by "Cowboy" Ben Alman - http://benalman.com/'

# Logging stuff.
function e_header()   { echo -e "\n\033[1m$@\033[0m"; }
function e_success()  { echo -e " \033[1;32m✔\033[0m  $@"; }
function e_error()    { echo -e " \033[1;31m✖\033[0m  $@"; }
function e_arrow()    { echo -e " \033[1;33m➜\033[0m  $@"; }

# Link files.
function link_header() { e_header "Linking files into home directory"; }
function link_test() {
  [[ "$1" -ef "$2" ]] && echo "same file"
}
function link_do() {
  #if [ -f "$entry" ];then
    e_success "Linking ~/$1."
    ln -sf ${2#$HOME/} ~/
  #fi
}

# Create extra files
function extra_header { e_header "Create extra files into home directory"; }


# Copy, link, init, etc.
function do_stuff() {

  local base dest skip
  local files=(~/.tree-dotfiles/$1/.??*)
  # No files? abort.
  if (( ${#files[@]} == 0 )); then return; fi
  # Run _header function only if declared.
  [[ $(declare -f "$1_header") ]] && "$1_header"
  # Iterate over files.
  for file in "${files[@]}"; do
    base="$(basename $file)"
    dest="$HOME/$base"
    # Run _test function only if declared.
    if [[ $(declare -f "$1_test") ]]; then
      # If _test function returns a string, skip file and print that message.
      skip="$("$1_test" "$file" "$dest")"
      if [[ "$skip" ]]; then
        e_error "Skipping ~/$base, $skip."
        continue
      fi
      # Destination file already exists in ~/. Back it up!
      if [[ -e "$dest" ]]; then
        e_arrow "Backing up ~/$base."
        # Set backup flag, so a nice message can be shown at the end.
        backup=1
        # Create backup dir if it doesn't already exist.
        [[ -e "$backup_dir" ]] || mkdir -p "$backup_dir"
        # Backup file / link / whatever.
        mv "$dest" "$backup_dir"
      fi
    fi
    # Do stuff.
    "$1_do" "$base" "$file"
  done
}

# Create extra personal files if doesn't exist
function do_extra_stuff() {
    local dest
    local files=(".extra" ".extra-gitconfig")

    extra_header

    for file in "${files[@]}"; do
        dest="$HOME/$file"
        if [[ -e "$dest" ]]; then
            e_error "Skipping ~/$file, already exists, skip creation."
        else
            echo -e "# ~/$file\n# generated by .tree-dotfiles/bin/dotfiles" >> "$dest"
            e_success "~/$file created."
        fi
    done
}

# Create caches directory, if it doesn't already exist.
mkdir -p "$HOME/.tree-dotfiles/caches"

# If backups are needed, this is where they'll go.
backup_dir="$HOME/.tree-dotfiles/backups/$(date "+%Y-%m-%d__%H-%M-%S")/"
backup=

# Execute code
do_stuff "link"
do_extra_stuff

# Alert if backups were made.
if [[ "$backup" ]]; then
  echo -e "\nBackups were moved to ~/${backup_dir#$HOME/}"
fi

# All done!
e_header "All done!"

